OpenBOR for Android 1.3.2
----------------------
Originally ported by ported by UTunnels (utunnels@hotmail.com).
Modifications by CRxTRDude.

Release notes
----------------------
1.3.2
- Updated the static library for libpng to 1.6.15. Removed the libz static library because libpng is now set up so it does not need it anymore, (it instead uses the zlib already present in the Android OS)

1.3.1
- Updated the static library for libogg to 1.3.2 and libvorbis to 1.3.4.

1.3
- SUCCESSFULLY added a wake lock which prevents OpenBOR to be destroyed by the OS itself during screen lock. (Note that the CPU still keeps running, so you will need to pause your game before you turn off the screen, otherwise the game keeps on going and kill your character.)
- Fixed the accelerometer by hardcoding it to be disabled in the first place.

1.1.2
- Added FLAG_KEEP_SCREEN_ON to prevent the game from exiting, so you can watch the cutscenes without the worry about the app exiting on you (on the sacrifice of your battery power of course because the screen keeps on running).
- Modified androidmanifest.xml to reflect changes (versioning and cleanup)
- Various directory modifications and minor fixes.

1.1
- Modified the buttons to make them look better.

1.0
- Original port by UTunnels.

Developer's notes
----------------------
Precompiled static libraries include sdl 2.0, libogg 1.3.2, libpng 1.5.6 and libvorbis 1.6.15

Source code for those libs can be found on internet.

Issues
----------------------
- SDL is still not updated, some features such as disabling the accelerometer and better external controls could not be possible (SDL 2.0.3 has a flag which makes it work). But for SDL to be updated, the main code needs to be modified as well. 

- Sound delay - Just a second though, latency is probably high, probably is hardware issue.

- Memory issues - For OGG in particular, it is very dominant, even uTunnels said so:
"Ogg seems to be a very cpu intensive format, besides openbor doesn't run another thread for audio. Try lower the compression level to see if helps a bit."

- Issues in the main build as well.


Compiling requirements
----------------------

To compile this port, you will need to install the Android NDK and SDK properly, as well as installing Apache ANT.

For Windows, you will also need Cygwin to run the various shell scripts in the source.

Further reading:
- http://developer.android.com/index.html
- http://www.ntu.edu.sg/home/ehchua/programming/android/android_ndk.html

Compiling instructions
----------------------

0. Install and properly configure Android SDK and NDK as well as other dependencies (such as Apache ANT and Cygwin for Windows users). Then, on a newly downloaded source, you will need to run versions.sh either by compiling/building or running the script via Cygwin.

1. Copy the file 'copy_and_rename_me_to_local.properties' over and rename it to 'local.properties' and then appropriately edit sdk.dir variable to point to your Android SDK directory.  

2. You can now run build.bat to compile the code. This will create a debug APK that you can install on an Android device.

3. Your APK is compiled on 'bin\' as OpenBOR-debug.apk.

Optional: You can set your private key as well, see http://developer.android.com/tools/publishing/app-signing.html for details.

Special thanks
-----------------------
uTunnels for the original Android port, ericavd101 for his take on compiling the APK (and the recipe he used for it), Stack Overflow users, especially Jongware, that helped regarding the image header edit problem, CyanogenMod for their Android ports of libogg and libvorbis, LearnOpenGLES.com for the tutorial on compiling the libpng for Android and the entire community at Chrono Crash for their never-ending support.

Support contact
-----------------------
For support regarding the port and OpenBOR itself, please reach out to us at the Chronocrash forums @ http://www.chronocrash.com, registration to the forums is required.